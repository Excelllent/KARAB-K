#include <stdio.h>
#include <stdlib.h>

struct student{
    int no;
    char name[40];
    int age;
    struct student *next;
};

typedef struct student node;

node *head,*newnode;

node* createList(){
    int i,k;
    node *head,*p;
    printf("Kac öğrenci :");
    scanf("%d",&k);
    for (i = 0; i <k ; i++) {
        if(i==0){
            head=(node *) malloc(sizeof(node));
            p=head;
        }
        else{
            p->next=(node *) malloc(sizeof(node));
            p=p->next;
        }
        printf("no");
        scanf("%d",&p->no);
        printf("name");
        scanf("%s",p->name);
        printf("age");
        scanf("%d",&p->age);

    }
    p->next=NULL;
    return head;
}
void traverselist(node * head){
    int counter=1;
    node *p1;
    p1=head;
    while (p1 != NULL){
        printf("%d- %d %s %d \n",counter,p1->no,p1->name,p1->age);
        p1=p1->next;
        counter++;
    }
}
node * addnode(node *head){
    int stdno;
    node *p,*q;
    node *newnode=(node *) malloc(sizeof(node));
    printf("yeni no gir:");scanf("%d",&newnode->no);
    printf("yeni name gir:");scanf("%s",newnode->name);
    printf("yeni yas gir:");scanf("%d",&newnode->age);

    printf("hangi numaraya eklemek istiyorsun");
    scanf("d",&stdno);
    p=head;
    if(p->no==stdno){
        newnode->next=p;
        head=newnode;
    }
    else{
        while (p->next != NULL && p->no !=stdno){
            q=p;
            p=p->next;
        }
        if(p->no==stdno){
            q->next=newnode;
            newnode->next=p;
        }
        else if(p->next==NULL){
            p->next=newnode;
            newnode->next=NULL;
        }
    }
    return head;
}
node * deletenode(node *head){
    int stdno;
    node *p,*q;

    printf("hangi numaraya silmek istiyorsun");
    scanf("d",&stdno);

    p=head;
    if(p->no==stdno){
        head=p->next;
        free(p);
    }
    else{
        while (p->next != NULL && p->no !=stdno){
            q=p;
            p=p->next;
        }
        if(p->no==stdno){
            q->next=p->next;
            free(p);
        }
        else if(p->next==NULL){
            printf("silecek bişey yok");
        }
    }
    return head;
}
int main(){
    node *head;
    int sec=0;
    printf("1.Create list 2.Traverse List 3.Add node 4.Delete node 5.Exit  ");
    while (1){
        printf("1-5 ?");
        scanf("%d",&sec);
        switch (sec) {
            case 1:head=createList();
                printf("Adres :%x\n",head);
                traverselist(head);
                break;
            case 2:
                traverselist(head);
                break;
            case 3:head= addnode(head);
                traverselist(head);
                break;
            case 4:head= deletenode(head);
                traverselist(head);
                break;
            case 5:
                exit(0);
        }
    }
}
